"""add_events_tables

Revision ID: 9d1936caeb39
Revises: c8527c01b6bf
Create Date: 2025-07-06 11:16:08.372688

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from database import Base
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9d1936caeb39'
down_revision: Union[str, None] = 'c8527c01b6bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('SEMINAR', 'WORKSHOP', 'CONFERENCE', 'COMPETITION', 'CULTURAL', 'ACADEMIC', name='eventtype'), nullable=False),
    sa.Column('status', sa.Enum('UPCOMING', 'ONGOING', 'REGISTRATION_OPEN', 'REGISTRATION_CLOSED', 'COMPLETED', name='eventstatus'), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('venue', sa.String(), nullable=False),
    sa.Column('speaker', sa.String(), nullable=True),
    sa.Column('organizer_role_id', sa.Integer(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('registered_count', sa.Integer(), nullable=True),
    sa.Column('registration_required', sa.Boolean(), nullable=True),
    sa.Column('registration_deadline', sa.DateTime(), nullable=True),
    sa.Column('fee', sa.Float(), nullable=True),
    sa.Column('external_link', sa.String(), nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organizer_role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_table('event_registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('special_requirements', sa.String(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_registrations_id'), 'event_registrations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_event_registrations_id'), table_name='event_registrations')
    op.drop_table('event_registrations')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    # ### end Alembic commands ###
